---
title: "MBVagTrans Results"
author: "Simon Reider"
format: 
  html:
    code-fold: true
    toc: true
    fig-format: pdf
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
editor: source
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = FALSE)
library(knitr)
library(DESeq2)
library(tidyverse)
library(phyloseq)
library(rstatix)
library(cowplot)
library(vegan)
library(pairwiseAdonis)
library(ggpubr)
theme_set(theme_bw())

# set custom color palette
custom_pal = c("#199E77", "#D86013", "#7440BE")

```

# Introduction

Include here metadata summaries and summary of phyloseq object

# PBS empty control

The PBS empty control seems to be contaminated with normal vaginal flora.

```{r pbs}
taxdistri = read_csv2( "results/microbiome/pbs_taxonomic_composition.csv")
kable(mutate(taxdistri, Abundance = round(Abundance, digits = 2)))
```

![Taxonomic composition of PBS sample](results/microbiome/pbs_taxonomic_composition_piechart.png)

```{r get phyloseq object}
ps_samples = readRDS("intermediate/ps_samples.rds")

sample_data(ps_samples)$grp = factor(sample_data(ps_samples)$grp, 
                                     labels = c("01_postmenopausal",
                                                "02_premenopausal",
                                                "03_trans-men"))
```

# Diversity Analysis

## Alpha-diversity

Alpha diversity describes the number and distribution of taxa *within* a sample or group of samples. Different indices exist that capture and describe different aspects of this ecologic measure.

In this dataset, alpha diversity is markedly different between the group of interest (i.e. *03_trans*) and the two control groups. However, the intervention group is more similar to the first control group (i.e. *postmenopausal women*).

```{r alpha diversity}
adiv = plot_richness(ps_samples, x = "grp", measures = c("Observed", "InvSimpson", "Shannon"))
adiv$data = adiv$data %>%
  mutate(grp = factor(grp, labels = c("postmenopausal", "premenopausal", "trans-men")))

aov = adiv$data %>%
  group_by(variable) %>%
  rstatix::anova_test(value~grp)

tukey = adiv$data %>%
  group_by(variable) %>%
  tukey_hsd(value~grp) 


adiv_plot = ggboxplot(adiv$data, x= "grp", y = "value", 
          fill = "grp", facet.by="variable", 
          scales = "free_y", alpha = 0.6) +
  labs(x = "", y = "Alpha diversity value", fill = "Group") +
  geom_point(alpha = 0.4) +
  scale_fill_manual(values = custom_pal) +
  theme_bw() + 
  rotate_x_text() +
  theme(legend.position = "right") +
  stat_pvalue_manual(tukey, y.position = c(200,240,280,3.5,4,4.5,40,47,54),
                     tip.length = 0,bracket.size = 0.8)

adiv_plot
  
kable(select(tukey, variable, group1,group2,p.adj, p.adj.signif))
```

### Effect of covariates

To rule out a possible effect of age on alpha diversity, pearson correlation of alpha diversity measures with age are performed within each of the 3 groups separately.

```{r adiv age}
adiv$data %>%
  group_by(variable, grp) %>%
  cor_test(value, Age) %>%
  select(grp, variable, cor, statistic, p, conf.low, conf.high) %>%
  kable()
```

No comparison is significant.

A subset of TM patients received GnRh-A. Therefore, we next test for differences regarding this medication.
```{r adiv gnrha}
adiv$data %>%
  filter(grp =="trans-men")  %>%
  group_by(variable) %>%
  t_test(value ~ GNRHA) 
  kable()
  
```
A student's t-test does not show any significant differences in indices of a-diversity for vaginal microbial swaps from TM with and without GNRHa. This is illustrated:
```{r adiv_gnrha fig}
gnrha_adiv = adiv$data %>% filter(grp=="trans-men")
ggboxplot(gnrha_adiv, x= "GNRHA", y = "value", 
          fill = "GNRHA", facet.by="variable", 
          scales = "free_y", alpha = 0.6) +
  labs(x = "", y = "Alpha diversity value", fill = "GNRHa") +
  geom_point(alpha = 0.4) +
  theme_bw() + 
  rotate_x_text() +
  theme(legend.position = "right")
```

#### Length of GAHT within patient group

```{r adiv ghat}
adiv$data %>%
  filter(grp =="trans-men") %>%
  group_by(variable) %>%
  cor_test(value, GHAT_Length) %>%
  select(variable, cor, statistic, p, conf.low, conf.high) %>%
  kable(digits = 3, caption = "Pearson Correlation of a-diversity measures with length of GAHT in the trans-men patient group")
```

In this analysis, a significant effect on Shannon index with length of hormone replacement therapy could be observed.

#### Influence of Nugent score within patient group

```{r adiv nugent}
adiv$data %>%
  group_by(variable) %>%
  tukey_hsd(value~NugentScore) %>%
  select(variable, group1, group2, estimate, p.adj, p.adj.signif, conf.low, conf.high) %>%
  kable(digits = 3, caption = "Tukey Test on alpha diversity measures by Nugent Score")
```

Notably, if analysis is split by patient group, none of these differences remain significant. This might be due to a lower sample size.

## Beta-diversity

This diversity metric compares different samples or groups of samples regarding their similarity or difference in community composition. The distance matrix can be visualized using dimension reduction techniques (e.g. PCA) or pairwise distances can be calculated. For this analysis, the main hypothesis is, that overall community composition differs significantly between the patient group (i.e. *03_trans*) and the two control groups. This will be tested using *adonis.*

```{r betadiversity}
# first, filter out low abundance taxa
lowabund_filter = genefilter_sample(ps_samples, filterfun_sample(function(x) x > 10), A=0.1*nsamples(ps_samples))
ps_filtered = prune_taxa(lowabund_filter, ps_samples)
ps_filtered

ps_filtered_rel = transform_sample_counts(ps_filtered, function(x) 100 * x/sum(x))

ord.bray<- ordinate(ps_filtered_rel, "PCoA", "bray")
ord.wunifrac <- ordinate(ps_filtered_rel, "PCoA", "unifrac", weighted = T)
ord.unifrac <- ordinate(ps_filtered_rel, "PCoA", "unifrac", weighted = F)

p1 = plot_ordination(ps_filtered_rel, ord.bray, type="samples", color="grp") +
  geom_point(size = 3, alpha = 0.8) +
  scale_color_brewer(type = "qual",palette = "Dark2") +
  stat_ellipse() +
  labs(color = "Group", caption = "Bray-Curtis")

p2 = plot_ordination(ps_filtered_rel, ord.wunifrac, type="samples", color="grp") +
  geom_point(size = 3, alpha = 0.8) +
  scale_color_brewer(type = "qual",palette = "Dark2") +
  stat_ellipse() +
  labs(color = "Group", caption = "Weighted Unifrac")

p3 = plot_ordination(ps_filtered_rel, ord.unifrac, type="samples", color="grp") +
  geom_point(size = 3, alpha = 0.8) +
  scale_color_brewer(type = "qual",palette = "Dark2")+
  stat_ellipse() +
  labs(color = "Group", caption = "Unweighted Unifrac")

# extract the legend from one of the plots
legend_b <- get_legend(
  p1 + 
    guides(color = guide_legend(nrow = 1)) +
    theme(legend.position = "bottom")
)

plot_ordinations = cowplot::plot_grid(p1 + theme(legend.position="none"),
                   p2 + theme(legend.position="none"),
                   p3 + theme(legend.position="none"),
                   labels =  "AUTO", ncol = 2)
```

```{r export plot, fig.height=8, fig.width=9}
bdiv_plot = cowplot::plot_grid(plot_ordinations, legend_b, ncol = 1, rel_heights = c(1, .1), labels = AUTO)
ggsave(plot = bdiv_plot, "results/figure_panels/fig2.pdf", width = 8, height = 6)
```

```{r adonis bdiv}
D_BC <- phyloseq::distance(ps_filtered_rel, "bray")
D_UF <- phyloseq::distance(ps_filtered_rel,  "unifrac")
D_wUF <- phyloseq::distance(ps_filtered_rel, "wunifrac")

adonis_bc = vegan::adonis2(D_BC ~ phyloseq::sample_data(ps_filtered_rel)$grp)
adonis_pw_bc = pairwise.adonis(D_BC, phyloseq::sample_data(ps_filtered_rel)$grp)

adonis_uf = vegan::adonis2(D_UF ~ phyloseq::sample_data(ps_filtered_rel)$grp)
adonis_pw_uf = pairwise.adonis(D_UF, phyloseq::sample_data(ps_filtered_rel)$grp)

adonis_wUF = vegan::adonis2(D_wUF ~ phyloseq::sample_data(ps_filtered_rel)$grp)
adonis_pw_wUF = pairwise.adonis(D_wUF, phyloseq::sample_data(ps_filtered_rel)$grp)

kable(adonis_pw_bc, digits = 3, caption = "Bray-Curtis")
kable(adonis_pw_uf, digits = 3, caption ="Unweigthed Unifrac")
kable(adonis_pw_wUF, digits = 3, caption = "Weighted Unifrac")
```


```{r adonis bdiv gnrha}
subsetted_ps = subset_samples(ps_filtered_rel, grp=="03_trans-men", !is.na(GNRHA))
D_BC2 <- phyloseq::distance(subsetted_ps, "bray")
D_UF2 <- phyloseq::distance(subsetted_ps,  "unifrac")
D_wUF2 <- phyloseq::distance(subsetted_ps, "wunifrac")

adonis_bc2 = vegan::adonis2(D_BC2 ~ phyloseq::sample_data(subsetted_ps)$GNRHA)
adonis_pw_bc = pairwise.adonis(D_BC2, 
                              phyloseq::sample_data(subsetted_ps)$GNRHA)

adonis_uf = vegan::adonis2(D_UF ~ phyloseq::sample_data(ps_filtered_rel)$grp)
adonis_pw_uf = pairwise.adonis(D_UF, phyloseq::sample_data(ps_filtered_rel)$grp)

adonis_wUF = vegan::adonis2(D_wUF ~ phyloseq::sample_data(ps_filtered_rel)$grp)
adonis_pw_wUF = pairwise.adonis(D_wUF, phyloseq::sample_data(ps_filtered_rel)$grp)

kable(adonis_pw_bc, digits = 3, caption = "Bray-Curtis")
kable(adonis_pw_uf, digits = 3, caption ="Unweigthed Unifrac")
kable(adonis_pw_wUF, digits = 3, caption = "Weighted Unifrac")
```
# Differential abundance

```{r deseq2}
library(DESeq2)

dds = phyloseq_to_deseq2(ps_filtered, ~ grp)
dds$grp<-relevel(dds$grp,ref="03_trans-men")
ds <- estimateSizeFactors(dds, type="poscounts")
ds = DESeq(ds, test="Wald", fitType="parametric")
alpha = 0.01
res_premenopausal = results(ds, contrast = c("grp", "02_premenopausal", "03_trans-men"))
taxa_sig_premenopausal = dplyr::filter(as.data.frame(res_premenopausal), padj < 0.05) %>%
  rownames_to_column("ASV")

taxa_table = tax_table(ps_filtered) %>%
  as.data.frame() %>%
  rownames_to_column("ASV")

diffabund_pre = left_join(taxa_sig_premenopausal, taxa_table, by = "ASV") %>%
  select(-Species) %>%
  write_csv2("results/microbiome/deseq_diff_trans-premenopausal.csv")

kable(diffabund_pre, digits = 3, row.names = F, caption = "Differential abundance between premenopausal women and trans-men")

# repeat analysis for postmenopausal group
res_postmenopausal = results(ds, contrast = c("grp", "01_postmenopausal", "03_trans-men"))
taxa_sig_postmenopausal = dplyr::filter(as.data.frame(res_postmenopausal), padj < 0.05) %>%
  rownames_to_column("ASV")

diffabund_post = left_join(taxa_sig_postmenopausal, taxa_table, by = "ASV") %>%
  write_csv2("results/microbiome/deseq_diff_trans-postmenopausal.csv")

kable(diffabund_post, digits = 3, row.names = F, caption = "Differential abundance between postmenopausal women and trans-men")

```

```{r plot deseq2 taxa}
asvs = unique(c(diffabund_pre$ASV, diffabund_post$ASV)) # get asvs identified by Deseq2

# melt the phyloseq object into a data.frame and filter OTUs for significant ASVs as identified by DESEQ2

ps_filtered_rel_deseqplot = ps_rel

# add otuid as separate column to the tax table
tax_table(ps_filtered_rel_deseqplot) <- cbind(tax_table(ps_filtered_rel_deseqplot), 
    rownames(tax_table(ps_filtered_rel_deseqplot)))
colnames(tax_table(ps_filtered_rel_deseqplot)) <- 
  c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "OTUID")

# subset phyloseq for sign. asvs (n = 63)
ps_filtered_rel_deseqplot = subset_taxa(ps_filtered_rel_deseqplot, OTUID %in% asvs)

# Add a concetenated taxonomy to tax_table
myranks2 = c("Genus", "Species")
mylabels2 = apply(tax_table(ps_filtered_rel_deseqplot)[, myranks2], 1, paste, sep="", collapse=" ")
# Add concatenated labels as a new rank after Species
tax_table(ps_filtered_rel_deseqplot) <- cbind(tax_table(ps_filtered_rel_deseqplot), taxlab=mylabels2)

asv_heatmap_grp = plot_heatmap(ps_filtered_rel_deseqplot, taxa.label = "taxlab", sample.label = "grp", na.value ="white",low = "white", high = "orange", sample.order = "grp", trans="log10")
asv_heatmap_clust = plot_heatmap(ps_filtered_rel_deseqplot, taxa.label = "taxlab", sample.label = "grp", na.value ="white",low = "white", high = "orange",  trans="log10")

library(microViz)
htmp_asvs = ps_filtered_rel_deseqplot %>%
  tax_fix() %>%
  tax_transform("compositional", rank = "Genus") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Group = anno_sample_cat(
        var = "grp", col = custom_pal, box_col = NA, border_col = "black",
        legend_title = "Group")))

htmp_asvs = htmp_asvs %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_asvs, "AnnoLegends"))
pdf(file = "results/microbiome/heatmap_genus-cluster.pdf", height = 6, width = 6)
htmp_asvs
dev.off()


# Summarize Abundance at the genus level for plotting, almost no species are assigned in this dataset
ps_sig_melt2 = ps_sig_melt %>%
  mutate(Species = ifelse(is.na(Species), "spp.", Species)) %>%
  mutate(Tax = paste0(OTU, ": ", Genus, " ", Species)) %>%
  filter(!is.na(Genus)) %>%
  group_by(Sample, Tax, grp) %>%
  summarize(Abundance = sum(Abundance)) 

# Filter least abundant taxa
taxa_abund= ps_sig_melt2 %>%
  group_by(Tax) %>%
  summarize(abund = mean(Abundance))

# only taxa with an average abundance of > 0.75 % are included in the publication figure to promote clarity
taxa_abund_paper = taxa_abund %>%
  filter(abund > 0.75)

# sort by ASV_TAX
ps_sig_melt2 %>%
  mutate(Tax = factor(Tax))

# build dataframe for automatic significance annotation
asvs_selection = taxa_abund_paper %>%
  mutate(ASV = stringi::stri_extract(Tax, regex = "ASV\\d+")) 

signif_pre = diffabund_pre %>%
  dplyr::filter(ASV %in% asvs_selection$ASV) %>%
  select(ASV, baseMean:padj) %>%
  rstatix::add_significance("padj") %>%
  left_join(asvs_selection, by = "ASV") %>%
  mutate(term = "grp", 
         group1 ="02_premenopausal",
         group2 = "03_trans-men") %>%
  select(Tax, term, group1, group2, baseMean:padj.signif)

signif_post = diffabund_post %>%
  dplyr::filter(ASV %in% asvs_selection$ASV) %>%
  select(ASV, baseMean:padj) %>%
  rstatix::add_significance("padj") %>%
  left_join(asvs_selection, by = "ASV") %>%
  mutate(term = "grp", 
         group1 ="01_postmenopausal",
         group2 = "03_trans-men") %>%
  select(Tax, term, group1, group2, baseMean:padj.signif)

signif_table = rbind(signif_pre, signif_post) %>% data.frame() %>% arrange(Tax) 

kable(signif_table, digits = 3, caption = "Results from DAA testing (DESeq2")

# Plot the final figure panel
deseq_res_fig = ggplot(filter(ps_sig_melt2, Tax %in% taxa_abund_paper$Tax), aes(x = grp, y=Abundance)) + 
  geom_jitter(width = 0.3, alpha = 0.6) +
  geom_boxplot(aes(fill = grp), alpha = 0.5, outlier.shape = NA) +
  facet_wrap(~Tax, scales = "free", ncol = 4) +
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank()) +
  labs(x = "", fill = "Group", y= "Abundance (%)") +
  theme(legend.position = "bottom") +
  scale_fill_manual(values = custom_pal) +
  scale_y_log10(expand = expansion(mult = c(0, 0.5)), labels = scales::comma)+
    theme(strip.text.x = element_text(size = 7))


deseq_res_fig 

deseq_res_fig_supplement = ggplot(filter(ps_sig_melt2, Tax %in% taxa_abund$Tax), aes(x = grp, y=Abundance)) + 
  geom_jitter(width = 0.3, alpha = 0.6) +
  geom_boxplot(aes(fill = grp), alpha = 0.5, outlier.shape = NA) +
  facet_wrap(~Tax, scales = "free", ncol = 4) +
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank()) +
  labs(x = "", fill = "Group", y= "Abundance (%)") +
  theme(legend.position = "bottom") +
  scale_fill_manual(values = custom_pal) +
  scale_y_log10(expand = expansion(mult = c(0, 0.5)), labels = scales::comma) +
  theme(strip.text.x = element_text(size = 7))

ggsave(filename = "results/microbiome/deseq_taxa_final.pdf", plot = deseq_res_fig, 
       device = "pdf", width = 8.5, height = 9)

# summary statistics
summarystat1 = ps_sig_melt2 %>%
  group_by(Genus, grp) %>%
  summarize(mean = mean(Abundance, na.rm=T),
            median = median(Abundance, na.rm =T),
            sd = sd(Abundance, na.rm = T),
            min = min(Abundance, na.rm =T),
            max = max(Abundance, na.rm =T))

write_csv2(x = summarystat1, "results/microbiome/deseq_summarystat_complete.csv")

summarystat2 = ps_sig_melt2 %>%
  group_by(Genus, grp) %>%
  summarize(mean = mean(Abundance, na.rm=T) %>% round(digits = 2),
            sd = sd(Abundance, na.rm = T) %>% round(digits = 2)) %>%
  mutate(stat = paste(mean, "±", sd)) %>%
  select(Genus, grp, stat) %>%
  pivot_wider(id_cols = "Genus", names_from = grp, values_from = stat)

write_csv2(summarystat2, "results/microbiome/deseq_summarystat_complete.csv")

kable(summarystat1)
kable(summarystat2)
```

This analysis reveals, that the *Trans-men* group is characterized by a loss of *Lactobacillus* and an increase in bacteria more commonly associated with the intestinal flora (e.g. *Campylobacter, Anaerococcus, Dialister, Prevotella)* compared to the premenopausal group.

Comparing the *Trans-men* to the *postmenopausal* group only revealed an even larger reduction in *Lactobacillus*.

Thus, overall the *trans-men* group is strinkingly similar in its taxonomic composition compared to postmenopausal women.

```{r plot deseq2, fig.width=9, fig.height=12}
deseq_res_fig
ggsave(deseq_res_fig, width = 7, height = 10, filename = "results/microbiome/deseq_asv_figure.pdf")
ggsave(deseq_res_fig, width = 7, height = 8, filename = "results/microbiome/deseq_asv_figure.png")
```

# Taxonomic composition

The following plots illustrate taxonomic composition at all levels of the taxonomy, The taxon table is filtered to only differentiate the most abundant taxa at each level (depending on the level).

```{r tax abundance plot}
ps_samples <- ps_samples %>% subset_taxa( Family!= "Mitochondria" | is.na(Family) & Class!="Chloroplast" | is.na(Class) ) 
ps.ns = prune_taxa(taxa_sums(ps_samples) >1, ps_samples) # remove singleton ASVs
ps_rel = transform_sample_counts(ps.ns, function(x) x/sum(x) *100) # transform to rel counts

# Generate agglomerated phyloseq objects
genus_rel = tax_glom(ps_rel, taxrank="Genus", NArm = F)
genus_rel # 401 genera
genus = psmelt(genus_rel) %>%
  mutate(Taxonomy = paste0("p_", Phylum, ";c_", Class, ";o_", Order, ";f_", Family, ";g_", Genus)) %>%
  select(Sample, Taxonomy, grp, Age:Estradiole, Abundance)
genus$Taxonomy[genus$Abundance < 15] <- "< 15 % abund."

# Family Level
family_rel = tax_glom(ps_rel, taxrank="Family", NArm = F)
family_rel # 383 genera
family = psmelt(family_rel) %>%
  mutate(Taxonomy = paste0("p_", Phylum, ";c_", Class, ";o_", Order, ";f_", Family)) %>%
  select(Sample, Taxonomy, grp, Age:Estradiole, Abundance)
family$Taxonomy[family$Abundance < 15] <- "< 15 % abund."

# Order Level
order_rel = tax_glom(ps_rel, taxrank="Order", NArm = F)
order_rel # 75 taxa
order = psmelt(order_rel) %>%
  mutate(Taxonomy = paste0("p_", Phylum, ";c_", Class, ";o_", Order)) %>%
  select(Sample, Taxonomy, grp, Age:Estradiole, Abundance)
order$Taxonomy[order$Abundance < 20] <- "< 20 % abund."
  

# Class Level
class_rel = tax_glom(ps_rel, taxrank="Class", NArm = F)
class_rel # 30 taxa
class = psmelt(class_rel) %>%
  mutate(Taxonomy = paste0("p_", Phylum, ";c_", Class)) %>%
  select(Sample, Taxonomy, grp, Age:Estradiole, Abundance)
class$Taxonomy[class$Abundance < 25] <- "< 25 % abund."
  
classplot = ggplot(class, aes(x = grp, y = Abundance/25, fill = Taxonomy)) + 
  geom_col(position = "stack") +
  theme(legend.position = "right") +
  labs(y = "Abundance (%)", x= "", caption = "taxonomic level: class") +
  rotate_x_text()

# Phylum Level
phylum_rel = tax_glom(ps_rel, taxrank="Phylum", NArm = F)
phylum_rel # 18 taxa
phylum = psmelt(phylum_rel) %>%
  mutate(Taxonomy = paste0("p_", Phylum)) %>%
  select(Sample, Taxonomy, grp, Age:Estradiole, Abundance)
phylum$Taxonomy[phylum$Abundance < 25] <- "< 25 % abund."
  
phylumplot = ggplot(phylum, aes(x = grp, y = Abundance/25, fill = Taxonomy)) + 
  geom_col(position = "stack") +
  theme(legend.position = "right") +
  labs(y = "Abundance (%)", x= "", caption = "taxonomic level: phylum") +
  rotate_x_text()

```

## Phylum level

On the phylum level, the taxonomic distribution is dominated by *Firmicutes* (these correspond to *Lactobacilli*, see below). The *Trans-men* group also shows an increase in *Bacteroidota* compared to the other 2 groups.

```{r phylum plot, fig.width=4, height = 5}
phylumplot = phylumplot + scale_x_discrete(limits = rev(levels(phylum$grp))) + coord_flip()
phylumplot
ggsave(plot = phylumplot, filename = "results/microbiome/taxplots_phylum.pdf", width = 7, height = 2.5)

```

## Class level

```{r class plot, fig.width=6, height = 5}
classplot
ggsave(plot = classplot, filename = "results/microbiome/taxplots_class.pdf", width = 6, height = 5)
ggsave(plot = classplot, filename = "results/microbiome/taxplots_class.png", width = 6, height = 5)

```

## Order level

```{r order plot, fig.width=7, height = 5}
orderplot
ggsave(plot = orderplot, filename = "results/microbiome/taxplots_order.pdf", width = 7, height = 5)
ggsave(plot = orderplot, filename = "results/microbiome/taxplots_order.png", width = 7, height = 5)

```

## Family level

```{r family plot, fig.width=8, height = 6}
familyplot
ggsave(plot = familyplot, filename = "results/microbiome/taxplots_family.pdf", width = 8, height = 6)
ggsave(plot = familyplot, filename = "results/microbiome/taxplots_family.png", width = 8, height = 6)

```

## Genus level

```{r genus plot, fig.width=15, height = 6}
genusplot
ggsave(plot = genusplot, filename = "results/microbiome/taxplots_genus.pdf", width = 15, height = 6)
ggsave(plot = genusplot, filename = "results/microbiome/taxplots_family.png", width = 15, height = 6)

```

As requested during peer review, these data are preseneted also in the form of a heatmap
```{r}
# Phyla as heatmap per sample
# filter phyla which only occur in single samples
phylum_rel_filt = filter_taxa(phylum_rel, function (x) {sum(x > 1) > 3}, prune=TRUE)
  phylum_heatmap_grp = plot_heatmap(phylum_rel_filt, taxa.label = "Phylum", sample.label = "grp", na.value = "white",low = "white", high = "darkorange", sample.order = "grp", trans="identity",first.taxa = "ASV1")
phylum_heatmap_clust = plot_heatmap(phylum_rel_filt, taxa.label = "Phylum", sample.label = "grp", na.value = "white",low = "white", high = "darkorange",  trans="identity",first.taxa = "ASV1")

genus_rel_filt = filter_taxa(genus_rel, function (x) {sum(x > 1) > 3}, prune=TRUE) 
myranks = c("Phylum", "Family", "Genus")
mylabels = apply(tax_table(genus_rel_filt)[, myranks], 1, paste, sep="", collapse="|")
# Add concatenated labels as a new rank after Species
tax_table(genus_rel_filt) <- cbind(tax_table(genus_rel_filt), taxlab=mylabels)
genus_heatmap_grp = plot_heatmap(genus_rel_filt, taxa.label = "taxlab", sample.label = "grp", na.value ="white",low = "white", high = "orange", sample.order = "grp", trans="log10")
genus_heatmap_clust = plot_heatmap(genus_rel_filt, taxa.label = "taxlab", sample.label = "grp", na.value ="white",low = "white", high = "orange",  trans="log10")



phylum_heatmap_grp = plot_heatmap(phylum_rel_filt, taxa.label = "Phylum", sample.label = "grp", na.value = "white",low = "white", high = "darkorange", sample.order = "grp", trans="identity",first.taxa = "ASV1")

ggsave(plot = phylum_heatmap_grp, filename = "results/microbiome/heatmap_phylum-grp.pdf", width = 6, height = 3)
ggsave(plot = genus_heatmap_grp, filename = "results/microbiome/heatmap_genus-grp.pdf", width = 8, height = 8)

# Alternatively, package microViz was used to generate heatmaps with dendrogram and group
library(microViz)
htmp_phylum = phylum_rel_filt %>%
  tax_transform("compositional", rank = "Phylum") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Group = anno_sample_cat(
        var = "grp", col = custom_pal, box_col = NA, border_col = "black",
        legend_title = "Group")))
htmp_phylum = htmp_phylum %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_phylum, "AnnoLegends"))
pdf(file = "results/microbiome/heatmap_phylum-cluster.pdf", height = 4, width = 6)
htmp_phylum
dev.off()
```



# Secondary analyses

### Duration of menopause

This analysis is only performed in the postmenopausal group

```{r postmenopausal_menopause duration}
head(sample_data(ps_samples)) 

# for menopause duration, use maaslin2
library(Maaslin2)

# only 01_postmenopausal samples
ps_menopause = subset_samples(ps_samples, grp =="01_postmenopausal") %>%
  transform_sample_counts(function(x) x/sum(x) * 100) # relative abundances are necessary

asv_durationMenopause = Maaslin2(input_data = otu_table(ps_menopause),
         input_metadata = as(sample_data(ps_menopause), "data.frame"),
         output = "results/maaslin2/asv_menopause-duration",
         min_abundance = 2.5,
         min_prevalence = 0.1,
         max_significance = 0.2,
         fixed_effects = "DurationMenopause")


# no significant effect on ASV level, try glom at genuslevel
ps_menopause_genus = tax_glom(ps_menopause, taxrank = "Genus")

genus_durationMenopause = Maaslin2(input_data = otu_table(ps_menopause_genus),
         input_metadata = as(sample_data(ps_menopause_genus), "data.frame"),
         output = "results/maaslin2/genus_menopause-duration",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = "DurationMenopause")

# no significant effect on genus level, try on family level
ps_menopause_family = tax_glom(ps_menopause, taxrank = "Family")

family_durationMenopause = Maaslin2(input_data = otu_table(ps_menopause_family),
         input_metadata = as(sample_data(ps_menopause_family), "data.frame"),
         output = "results/maaslin2/family_menopause-duration",
         min_abundance = 10,
         min_prevalence = 0.3,
         max_significance = 0.2,
         fixed_effects = "DurationMenopause")

## Alpha diversity by duration of menopause
ps_menopause_abs = subset_samples(ps_samples, grp =="01_postmenopausal")

adiv_menopause = plot_richness(ps_menopause_abs, measures = c("Observed", "Shannon", "InvSimpson"))

adiv_menopause$data %>%
  select(DurationMenopause, variable, value) %>%
  group_by(variable) %>%
  cor_test(value, DurationMenopause) %>%
  kable(digits = 3)

adiv_menopause$data %>%
  ggplot(aes(x = DurationMenopause, y = value)) + 
  geom_point()+
  geom_smooth(method ="lm") +
  facet_wrap(~variable, scales = "free_y") 


BC_menopause_genus = vegan::vegdist(otu_table(ps_menopause_genus))

menopauseduration_adonis_bc = vegan::adonis2(BC_menopause_genus ~ phyloseq::sample_data(ps_menopause_genus)$DurationMenopause)

# no significant effect on the beta diversity level as well

# Summary statistics of duration menopause
sample_data(ps_menopause_genus)$DurationMenopause %>%
  summary()

```

There is no significant correlation of duration of menopause (years) with alpha diversity of vaginal microbiomes and overall community composition (beta-diversity). Duration of menopause in this sample is rather varied ranging from 1 to 28 years (mean 14.5 years).

### Duration of gender-affirming hormone therapy (GAHT)

This analysis is only performed in the trans-men group.

```{r trans testosterone}
# only 03_trans samples
ps_trans = subset_samples(ps_samples, grp =="03_trans-men") %>%
  transform_sample_counts(function(x) x/sum(x) * 100) # relative abundances are necessary

asv_GHAT = Maaslin2(input_data = otu_table(ps_trans),
         input_metadata = as(sample_data(ps_trans), "data.frame"),
         output = "results/maaslin2/asv_GHAT_Length",
         min_abundance = 1,
         min_prevalence = 0.1,
         max_significance = 0.2,
         fixed_effects = "GHAT_Length")

tax_table(ps_trans) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(asv_GHAT$results, qval <0.2)$feature)

ps_trans_genus = tax_glom(ps_trans, taxrank = "Genus")
genus_GHAT = Maaslin2(input_data = otu_table(ps_trans_genus),
         input_metadata = as(sample_data(ps_trans_genus), "data.frame"),
         output = "results/maaslin2/genus_GHAT_Length",
         min_abundance = 5,
         min_prevalence = 0.1,
         max_significance = 0.2,
         fixed_effects = "GHAT_Length")


tax_table(ps_trans_genus) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(genus_GHAT$results, qval < 0.2)$feature)

# plot correlation for these 2 genera
psmelt_trans_genus = psmelt(ps_trans_genus)
maaslin_res_genus_ghat = ggplot(filter(psmelt_trans_genus, OTU %in% filter(genus_GHAT$results, qval < 0.2)$feature),
                                aes(x = GHAT_Length, y = Abundance)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(~Genus, scales = "free") +
  scale_y_continuous(limits = function(x){c(0, max(0.1, x))}) +
  coord_cartesian(xlim = c(0,100)) +
  labs(x = "Length of Testosterone Therapy",
       y = "Genus Abundance (%)",
       caption = "Maaslin2 results")

maaslin_res_genus_ghat
ggsave(maaslin_res_genus_ghat, filename = "results/maaslin2/genus_GHAT_Length_panelplot.pdf",
       height = 4, width =5)

## Alpha diversity by duration of gaht
ps_trans_abs = subset_samples(ps_samples, grp =="03_trans-men")
ps_trans_genus = tax_glom(ps_trans_abs, taxrank ="Genus") %>%
  transform_sample_counts(function(x) x/sum(x) * 100)

adiv_trans = plot_richness(ps_trans_abs, measures = c("Observed", "Shannon", "InvSimpson"))

adiv_trans$data %>%
  select(GHAT_Length, variable, value) %>%
  group_by(variable) %>%
  cor_test(value, GHAT_Length) %>%
  kable(digits = 3)

adiv_trans$data %>%
  ggplot(aes(x = GHAT_Length, y = value)) + 
  geom_point()+
  geom_smooth(method ="lm") +
  facet_wrap(~variable, scales = "free_y")



BC_trans_genus = vegan::vegdist(otu_table(ps_trans_genus))
ord.bc = ordinate(ps_trans_genus,method = "PCoA")

gaht_adonis_bc = vegan::adonis2(BC_trans_genus ~ phyloseq::sample_data(ps_trans_genus)$GHAT_Length)

#This is highly significant on the genus level!
kable(gaht_adonis_bc)
  
# Summary statistics of duration menopause
sample_data(ps_trans_genus)$GHAT_Length %>%
  summary()

p_gaht_beta = plot_ordination(ps_trans_genus, ord.bc, type="samples", color="GHAT_Length") +
  geom_point(size = 3, alpha = 0.8) +
  labs(color = "Length of GAHT", caption = "Bray-Curtis") +
  scale_color_continuous(limits = c(0,100))
p_gaht_beta

```

There is a significant effect of duration of GAHT on the shannon index value in the trans group and on overall community composition although this seems to depend on a single outlier with a duration of 150 of hormone therapy. On the genus level, there are 2 taxa (Dialister and Prevotella) who are inversely correlated to duration of testosterone supplementation.

### Absolute Height of Testosterone in the trans-men group

```{r testosterone height}

# Height of testosterone
genus_testosterone = Maaslin2(input_data = otu_table(ps_trans_genus),
         input_metadata = as(sample_data(ps_trans_genus), "data.frame"),
         output = "results/maaslin2/genus_Testosterone",
         min_abundance = 5,
         min_prevalence = 0.3,
         max_significance = 0.2,
         fixed_effects = "Testosterone") # no significant effect

```

No significant associations.

### Duration of GnRH therapy in trans-men group

```{r gnrh duration trans}
summary(sample_data(ps_trans_genus)$Duration_GNRH) # only 10 values!

genus_gnrh= Maaslin2(input_data = otu_table(ps_trans_genus),
         input_metadata = as(sample_data(ps_trans_genus), "data.frame"),
         output = "results/maaslin2/genus_DurationGNRH",
         min_abundance = 5,
         min_prevalence = 0.3,
         max_significance = 0.2,
         fixed_effects = "Duration_GNRH") # no significant effect

# no significant associations
```

No significant associations.

### Cycle dependency in pre-menopausal group

```{r cycle pre}
ps_pre = subset_samples(ps_samples, grp =="02_premenopausal") %>%
  transform_sample_counts(function(x) x/sum(x) * 100) # relative abundances are necessary

asv_cycleday = Maaslin2(input_data = otu_table(ps_pre),
         input_metadata = as(sample_data(ps_pre), "data.frame"),
         output = "results/maaslin2/asv_cycle_premeno",
         min_abundance = 3,
         min_prevalence = 0.1,
         max_significance = 0.2,
         fixed_effects = "CycleDaySampling") # no significant effect

ps_pre_genus = tax_glom(ps_pre, "Genus")

genus_cycleday = Maaslin2(input_data = otu_table(ps_pre_genus),
         input_metadata = as(sample_data(ps_pre_genus), "data.frame"),
         output = "results/maaslin2/genus_cycle_premeno",
         min_abundance = 5,
         min_prevalence = 0.3,
         max_significance = 0.2,
         fixed_effects = "CycleDaySampling") 

tax_table(ps_pre_genus) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(genus_cycleday$results, qval < 0.2)$feature) %>%
  kable()

psmelt_pre_genus = psmelt(ps_pre_genus)

maaslin_res_genus_cycleday = ggplot(filter(psmelt_pre_genus, OTU %in% filter(genus_cycleday$results, qval < 0.2)$feature),
                                aes(x = CycleDaySampling, y = Abundance)) +
  geom_point(size = 4, alpha = 0.7) +
  facet_wrap(~Genus, scales = "free") +
  geom_smooth(method = "lm", se = F, formula = y ~poly(x, 3, raw =T)) +
  scale_y_continuous(limits = function(x){c(0, max(0.1, x))}) +
  coord_cartesian(xlim = c(0,28)) +
  labs(x = "Day of sampling",
       y = "Genus Abundance (%)",
       caption = "Maaslin2 results")


maaslin_res_genus_cycleday
ggsave(maaslin_res_genus_cycleday, filename = "results/maaslin2/genus_CycleDay_panelplot.png",
       height = 5, width = 6)
```

*Gardnerella* is highest in the early days of the menstrual cycle while *Lactobacillus* during the middle of the cycle. This seems to correspond to *Vomstein et al 2022*.

### Influence of sexual activity on microbiome composition

```{r sexual activity}
# Sexual activity
ps_rel_genus = tax_glom(ps_samples, taxrank = "Genus") %>%
  transform_sample_counts(function(x) x/sum(x) * 100)
ps_rel_genus_sexuallyactive = subset_samples(ps_rel_genus, sample_data(ps_rel_genus)$SexuallyActive %in% c("yes", "no")) # for 3 patients, this information is not available

ps_abs_genus = tax_glom(ps_samples, taxrank = "Genus") 
ps_abs_genus_sexuallyactive = subset_samples(ps_abs_genus, sample_data(ps_abs_genus)$SexuallyActive %in% c("yes", "no"))

ps_rel_genus_sexuallyactive

# Via Maaslin2
genus_SexuallyActive = Maaslin2(input_data = otu_table(ps_rel_genus_sexuallyactive),
         input_metadata = as(sample_data(ps_rel_genus_sexuallyactive), "data.frame"),
         output = "results/maaslin2/genus_SexuallyActive",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = "SexuallyActive") 

tax_table(ps_rel_genus_sexuallyactive) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(genus_SexuallyActive$results, qval < 0.2)$feature)


# plot sexuallyActive vs these 2 genera 
psmelt_rel_genus_sexuallyactive = psmelt(ps_rel_genus_sexuallyactive)
maaslin_res_genus_sexactive = ggplot(filter(psmelt_rel_genus_sexuallyactive, OTU %in% filter(genus_SexuallyActive$results, qval < 0.2)$feature),
                                aes(x = SexuallyActive, y = Abundance,fill = SexuallyActive)) +
  geom_jitter() +
  geom_boxplot(alpha = 0.7, outlier.shape = NA) +
  facet_wrap(~Genus, scales = "free") +
  scale_y_continuous(limits = function(x){c(0, max(0.1, x))}) +
  theme(legend.position = "none")+
  labs(x = "Sexually Active",
       y = "Genus Abundance (%)",
       caption = "Maaslin2 results")+
    scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +
  scale_fill_manual(values = c("black", "lightgrey"))


maaslin_res_genus_sexactive
ggsave(maaslin_res_genus_sexactive, filename = "results/maaslin2/genus_SexuallyActive_panelplot.pdf",
       height = 3, width = 4)

# Via Deseq2
sexactive_ds = phyloseq_to_deseq2(ps_abs_genus_sexuallyactive, ~SexuallyActive)
cts = counts(sexactive_ds)
geoMeans = apply(cts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
sexactive_ds = estimateSizeFactors(sexactive_ds, geoMeans=geoMeans)
sexactive_ds = DESeq(sexactive_ds, test = "Wald", fitType = "parametric")
res = results(sexactive_ds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(ps_abs_genus_sexuallyactive)[rownames(sigtab), ], "matrix"))
sigtab = as.data.frame(sigtab) %>%
  rownames_to_column("feature")

sigtab
 

# Wilcoxon
psmelt_rel_genus_sexuallyactive %>%
  group_by(OTU) %>%
  rstatix::t_test(data = ., Abundance~SexuallyActive) %>%
  rstatix::adjust_pvalue(method = "fdr") %>%
  filter(p.adj < 0.1)

# using simple parametric statistical test (t-test) no significant diff.

# generate a plot of HT002 abundance per group
data_rel = transform_sample_counts(ps_abs_genus_sexuallyactive, function(x) x/sum(x)*100)
data_psmelt = psmelt(data_rel)

filter(data_psmelt, OTU %in% sigtab$feature) %>%
  ggplot(aes(x = grp, y = Abundance, fill = SexuallyActive)) +
  geom_boxplot(position = position_dodge()) +
  scale_y_log10()

```

Although Maaslin2 detects significant changes in some taxa, this might not be statistically relevant due to the extremely skewed distribution of data and non-suitability of a linear model for comparison of 2 groups. Likewise, using a simple parametric statistical test such as the t-test is sub-optimal. This approach fails to detect any significantly altered taxa.

However, Genus *HT002* of family Lactobacillaceae reaches borderline significance (q = 0.054). Some studies use a p-value cutoff of q < 0.01 for these analyses. However, this might be counfounded by all patients in the premenopausal group being sexually active (i.e. association with premenopausal roup per se and not with seuxal activity)
Next, we analyse and describe the taxonomic composition within the *trans-men* and control groups by sexual activity. There are no significant statistical differences and the sample size is small. Therefore, the top 10 abundant taxa are listed for sexually active and non-active subgroups:

```{r sexactive_toptaxa}
# Trans Group taxa selection
ps_rel_genus_sexuallyactive_trans = subset_samples(ps_rel_genus_sexuallyactive, grp =="03_trans-men")
top <- names(sort(taxa_sums(ps_rel_genus_sexuallyactive_trans), decreasing = TRUE))[1:20]
ps_rel_genus_sexuallyactive_trans20 = prune_taxa(top, ps_rel_genus_sexuallyactive_trans)
myranks = c("Phylum", "Family", "Genus")
mylabels = apply(tax_table(ps_rel_genus_sexuallyactive_trans20)[, myranks], 1, paste, sep="", collapse="|")
# Add concatenated labels as a new rank after Species
tax_table(ps_rel_genus_sexuallyactive_trans20) <- cbind(tax_table(ps_rel_genus_sexuallyactive_trans20), taxlab=mylabels)

genus_htmp_sexactive_trans = plot_heatmap(ps_rel_genus_sexuallyactive_trans20, taxa.label = "taxlab", sample.label = "SexuallyActive", na.value = "white",low = "white", high = "darkorange", sample.order = "SexuallyActive", trans="identity",first.taxa = "ASV1")
genus_htmp_sexactive_trans_clust = plot_heatmap(ps_rel_genus_sexuallyactive_trans20, taxa.label = "taxlab", sample.label = "SexuallyActive", na.value = "white",low = "white", high = "darkorange",  trans="identity",first.taxa = "ASV1")

htmp_sexactive_trans = ps_rel_genus_sexuallyactive_trans20 %>%
  tax_transform("compositional", rank = "Genus") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Group = anno_sample_cat(
        var = "SexuallyActive", col = custom_pal, box_col = NA, border_col = "black",
        legend_title = "Sexually Active")))
htmp_sexactive_trans = htmp_sexactive_trans %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_sexactive_trans, "AnnoLegends"))


psmelt_rel_genus_sexuallyactive_trans.top <- prune_taxa(top, ps_rel_genus_sexuallyactive_trans) %>%
  psmelt() %>%
  mutate(tax = paste(Phylum, Class, Order, Family, Genus,sep = "|")) %>%
  group_by(tax, SexuallyActive)

# Plot
genus_sexactive_trans_top20 = ggplot(psmelt_rel_genus_sexuallyactive_trans.top, aes(x = tax, y = Abundance, fill = SexuallyActive)) +
  geom_boxplot(position="dodge", alpha = 0.5) +
  geom_point(aes(color = SexuallyActive), position = position_dodge(width = 0.7), alpha = 0.8) +
  scale_fill_manual(values = c("black", "lightgrey")) +
  scale_color_manual(values = c("black", "lightgrey")) +
  coord_flip() +
  theme_bw(base_size= 9) +
  lims(y = c(0,100)) + 
  labs(title = "Trans-men group", y = "Abundance (%)", x = "", color = "Sexually Active", fill = "Sexually Active")
  
# Summarize
Genus_Sexuallyactive_Trans_top20 = psmelt_rel_genus_sexuallyactive_trans.top %>% 
  summarize(mean = mean(Abundance, na.rm=T),
           median = median(Abundance, na.rm =T),
           sd = sd(Abundance, na.rm=T),
           IQR = IQR(Abundance ,na.rm=T))

knitr::kable(Genus_Sexuallyactive_Trans_top20, digits = 2)


# Postmenopausal group
ps_rel_genus_sexuallyactive_post = subset_samples(ps_rel_genus_sexuallyactive, grp =="01_postmenopausal")
top2 <- names(sort(taxa_sums(ps_rel_genus_sexuallyactive_post), decreasing = TRUE))[1:20]

# Heatmap
ps_rel_genus_sexuallyactive_post20 = prune_taxa(top2, ps_rel_genus_sexuallyactive_post)
myranks = c("Phylum", "Family", "Genus")
mylabels = apply(tax_table(ps_rel_genus_sexuallyactive_post20)[, myranks], 1, paste, sep="", collapse="|")
# Add concatenated labels as a new rank after Species
tax_table(ps_rel_genus_sexuallyactive_post20) <- cbind(tax_table(ps_rel_genus_sexuallyactive_post20), taxlab=mylabels)

genus_htmp_sexactive_post = plot_heatmap(ps_rel_genus_sexuallyactive_post20, taxa.label = "taxlab", sample.label = "SexuallyActive", na.value = "white",low = "white", high = "darkorange", sample.order = "SexuallyActive", trans="identity",first.taxa = "ASV1")
genus_htmp_sexactive_post_clust = plot_heatmap(ps_rel_genus_sexuallyactive_post20, taxa.label = "taxlab", sample.label = "SexuallyActive", na.value = "white",low = "white", high = "darkorange",  trans="identity",first.taxa = "ASV1") 

htmp_sexactive_post = ps_rel_genus_sexuallyactive_post20 %>%
  tax_transform("compositional", rank = "Genus") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Group = anno_sample_cat(
        var = "SexuallyActive", col = custom_pal, box_col = NA, border_col = "black",
        legend_title = "Sexually Active")))
htmp_sexactive_post = htmp_sexactive_post %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_sexactive_post, "AnnoLegends"))

htmp_sexactive_trans = ps_rel_genus_sexuallyactive_trans20 %>%
  tax_transform("compositional", rank = "Genus") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Group = anno_sample_cat(
        var = "SexuallyActive", col = custom_pal, box_col = NA, border_col = "black",
        legend_title = "Sexually Active")))
htmp_sexactive_trans = htmp_sexactive_trans %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_sexactive_trans, "AnnoLegends"))

post_selected = phyloseq(otu_table(ps_rel_genus_sexuallyactive_post20),
                         tax_table(ps_rel_genus_sexuallyactive_post20),
                         sample_data(ps_rel_genus_sexuallyactive_post20))
trans_selected = phyloseq(otu_table(ps_rel_genus_sexuallyactive_trans20),
                          tax_table(ps_rel_genus_sexuallyactive_trans20),
                          sample_data(ps_rel_genus_sexuallyactive_trans20))
merged_ps = merge_phyloseq(post_selected,trans_selected)
   
htmp_sexactive_combined = merged_ps %>%
  tax_transform("compositional", rank = "Genus") %>%
  comp_heatmap(
    sample_anno = sampleAnnotation(
      Sex = anno_sample_cat(
        var = "SexuallyActive", col = c("lightgrey", "darkgrey"), box_col = NA, border_col = "black",
        legend_title = "Sexually Active"),
      Group = anno_sample_cat(
        var = "grp", col = custom_pal, box_col = NA, border_col = "black", legend_title = "Group")
      ))
htmp_sexactive_combined = htmp_sexactive_combined %>% ComplexHeatmap::draw(
  annotation_legend_list = attr(htmp_sexactive_combined, "AnnoLegends"))
                        
pdf("results/microbiome/htmp_sexactive_combined.pdf",width = 6, height = 6)
htmp_sexactive_combined
dev.off()

png("results/microbiome/htmp_sexactive_combined.png",width = 6, height = 6)
htmp_sexactive_combined
dev.off()

# Heatmap by genus
fig6_heatmaps = cowplot::plot_grid(genus_htmp_sexactive_post, genus_htmp_sexactive_trans, ncol = 1, align = "vh")

ggsave(plot = fig6_heatmaps, filename = "results/microbiome/sexuallyactive_heatmaps.pdf",
       width = 8, height = 8)

psmelt_rel_genus_sexuallyactive_post.top <- prune_taxa(top2, ps_rel_genus_sexuallyactive_post) %>%
  psmelt() %>%
  mutate(tax = paste(Phylum, Class, Order, Family, Genus,sep = "|")) %>%
  group_by(tax, SexuallyActive)

# Plot
genus_sexactive_post_top20 = ggplot(psmelt_rel_genus_sexuallyactive_post.top, aes(x = tax, y = Abundance, fill = SexuallyActive)) +
  geom_boxplot(position="dodge", alpha = 0.5) +
  geom_point(aes(color = SexuallyActive), position = position_dodge(width = 0.7), alpha = 0.8) +
  scale_fill_manual(values = c("black", "lightgrey")) +
  scale_color_manual(values = c("black", "lightgrey")) +
  coord_flip() +
  theme_bw(base_size = 9) +
  lims(y = c(0,100)) + 
  labs(title = "Postmenopausal group", y = "Abundance (%)", x = "", color = "Sexually Active", fill = "Sexually Active")

ggsave(filename = "results/Genus_SexuallyActive_Descriptive_Postmenopausal.pdf", plot = genus_sexactive_post_top20,
       height = 5.5, width = 8.5)
ggsave(filename = "results/Genus_SexuallyActive_Descriptive_Trans.pdf", plot = genus_sexactive_trans_top20,
       height = 5.5, width = 8.5)

genus_sexactive_comb_top20 = cowplot::plot_grid(genus_sexactive_post_top20, genus_sexactive_trans_top20,
                                                ncol = 1, align = "vh", labels = "AUTO")
ggsave(filename = "results/Genus_SexuallyActive_Descriptive_Complete.pdf", plot = genus_sexactive_comb_top20,
       height = 11, width = 8.5)
# Summarize
Genus_Sexuallyactive_Post_top20 = psmelt_rel_genus_sexuallyactive_post.top %>% 
  summarize(mean = mean(Abundance, na.rm=T),
           median = median(Abundance, na.rm =T),
           sd = sd(Abundance, na.rm=T),
           IQR = IQR(Abundance ,na.rm=T))

knitr::kable(Genus_Sexuallyactive_Post_top20, digits = 2)

genus_sexactive_trans_top20
genus_sexactive_post_top20

write_csv(Genus_Sexuallyactive_Post_top20, file = "results/Genus_SexuallyActive_Descriptive_Postmenopausal.csv")
write_csv(Genus_Sexuallyactive_Trans_top20, file = "results/Genus_SexuallyActive_Descriptive_Trans.csv")

# Analysis in Trans group with male sexual partner only
genus_Sexofpartner = psmelt_rel_genus_sexuallyactive_trans.top %>%
  filter(!is.na(SexOfPartner)) %>%
  mutate(SexOfPartner2 = ifelse(SexOfPartner %in% c("M", "M+F"), "M", "F only"))
genus_sexactive_trans_malepartner_top20 = ggplot(genus_Sexofpartner, 
                                                 aes(x = tax, y = Abundance, fill = SexuallyActive)) +
  geom_boxplot(position="dodge", alpha = 0.5) +
  geom_point(aes(color = SexuallyActive), position = position_dodge(width = 0.7), alpha = 0.8) +
  scale_fill_manual(values = c("black", "lightgrey")) +
  scale_color_manual(values = c("black", "lightgrey")) +
  coord_flip() +
  theme_bw() +
  facet_wrap(~SexOfPartner2) +
  lims(y = c(0,100)) + 
  labs(title = "Trans-men group", y = "Abundance (%)", x = "", color = "Sexually Active", fill = "Sexually Active")
  
ggsave(filename = "results/Genus_SexuallyActive_Descriptive_Trans_SexOfPartner.pdf",
       genus_sexactive_trans_malepartner_top20,
       height = 8, width = 11)
```

### Influence of the duration of amenorrhea on microbiome composition

Both postmenopausal women as well as trans men undergoing GAHT experience amenorrhea. This section explores a potential interaction between time since last menstruation and composition of the vaginal microbiome.

**This analysis is performed within each group separately and results are compared.**

```{r duration-menopause}
# generate relevant phyloseq object
ps_menopause = subset_samples(ps_samples, grp !="02_premenopausal")

sample_data(ps_menopause)$DurationMenopause # this is the duration of menopause in postmenopausal women (years)
sample_data(ps_menopause)$DurationAmenorrhea # duration of amenorrhea in trans group (months)
sample_data(ps_menopause)$DurationMenopauseMonths = sample_data(ps_menopause)$DurationMenopause*12
sample_data(ps_menopause)$DurationCombined = ifelse(is.na(sample_data(ps_menopause)$DurationMenopauseMonths), sample_data(ps_menopause)$DurationAmenorrhea, sample_data(ps_menopause)$DurationMenopauseMonths)

ps_menopause_rel =  transform_sample_counts(ps_menopause,function(x) x/sum(x) * 100)
# Diversity analysis
adiv_menopause =  plot_richness(ps_menopause, measures = c("Observed", "Shannon", "InvSimpson"))
  
adiv_menopause = adiv_menopause$data %>%
  select(samples, grp, DurationMenopause, DurationAmenorrhea, DurationCombined, variable, value)

corr_trans = filter(adiv_menopause, grp =="03_trans-men") %>%
  group_by(variable) %>%
  rstatix::cor_test(value,DurationCombined)
kable(corr_trans)

plot_trans = ggplot(filter(adiv_menopause, grp =="03_trans-men"), aes(x = DurationCombined, y = value)) +
  geom_point() +
  geom_smooth(method = "lm", color = "darkred") +
  facet_wrap(~variable, scales = "free") +
  labs(x = "Duration of Amenorrhea in trans-men group", y = "Alpha diversity value")

plot_postmeno = ggplot(filter(adiv_menopause, grp =="01_postmenopausal"), aes(x = DurationCombined, y = value)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(~variable, scales = "free") +
  labs(x = "Duration of Amenorrhea in postmenopausal group", y = "Alpha diversity value")

corr_postmeno = filter(adiv_menopause, grp =="01_postmenopausal") %>%
  group_by(variable) %>%
  rstatix::cor_test(value,DurationMenopause,method = "pearson")
kable(corr_postmeno)

# correlations are not signficiant for trans and postmenopausal group separately
cowplot::plot_grid(plot_trans, plot_postmeno, ncol = 1)

# Next, both groups are combined: in months
adiv_menopause$grp = factor(adiv_menopause$grp, labels = c("postmenopausal", "trans-men"))
corr_menopause = adiv_menopause %>%
  group_by(variable) %>%
  rstatix::cor_test(value, DurationCombined, method = "pearson")
kable(corr_menopause)

comb_menopause_plot

ggsave(plot = comb_menopause_plot,device = "pdf", 
       filename = "MbVagTrans_Results_files/figure-html/duration-menopause_comb.pdf", height = 3)

# Figure 1 complete
Fig1 = cowplot::plot_grid(adiv_plot, comb_menopause_plot, align = "hv", ncol = 1, labels = c("A", "B"))

ggsave("results/figure_panels/fig1.pdf", width = 6, height =7)

## Maaslin2 analysis of abundance with duration of amenorrhea
ps_menopause_rel_genus = tax_glom(ps_menopause_rel, taxrank = "Genus")

genus_MenoPauseDurationMonths = Maaslin2(input_data = otu_table(ps_menopause_rel_genus),
         input_metadata = as(sample_data(ps_menopause_rel_genus), "data.frame"),
         output = "results/maaslin2/genus_MenopausedurationMonths",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = "DurationCombined") 

# 4 ASVs 

tax_table(ps_menopause_rel_genus) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(genus_MenoPauseDurationMonths$results, qval < 0.2)$feature)

# Lactobacillus, dialister, Anaerococcus, Prevotella

# plot DurationCombined vs these 4 genera 
psmelt_rel_genus_durationComb = psmelt(ps_menopause_rel_genus)
maaslin_res_genus_durationComb = ggplot(filter(psmelt_rel_genus_durationComb, OTU %in% filter(genus_MenoPauseDurationMonths$results, qval < 0.2)$feature),
                                aes(x = DurationCombined, y = Abundance,color = grp)) +
  geom_jitter(size = 2) +
  facet_wrap(~Genus, scales = "free") +
  scale_y_continuous(limits = function(x){c(0, max(0.1, x))}) +
  theme(legend.position = "none")+
  labs(x = "Sexually Active",
       y = "Genus Abundance (%)",
       caption = "Maaslin2 results")

maaslin_res_genus_durationComb
ggsave(maaslin_res_genus_durationComb, filename = "results/maaslin2/genus_DurationMenopauseCombined_panelplot.png",
       height = 5, width = 6)

```

## Influence of sex of partner

```{r partnersex_Adiv}

## Analysis in complete cohort
### alpha diversity
rstatix::shapiro_test(filter(adiv$data, variable=="Observed"), value)
rstatix::shapiro_test(filter(adiv$data, variable=="Shannon"), value)
rstatix::shapiro_test(filter(adiv$data, variable=="InvSimpson"), value)
adiv$data %>% 
  filter(variable %in% c("Observed", "Shannon", "InvSimpson")) %>%
  group_by(variable) %>%
  rstatix::kruskal_test(value~SexOfPartner)

adiv$data %>% 
  filter(variable %in% c("Observed", "Shannon", "InvSimpson")) %>%
  group_by(variable) %>%
  rstatix::anova_test(value~SexOfPartner)
```

Observed is not distributed normally, and no significant effect of sex of partner is detected using Kruskal Wallis test. However, Shannon and InvSimpson indices show a significant effect.

```{r partnersex_bdiv}
adonis_bc_partnersex = vegan::adonis2(D_BC ~ phyloseq::sample_data(ps_filtered_rel)$SexOfPartner) 
adonis_pw_bc_partnersex = pairwise.adonis(D_BC, phyloseq::sample_data(ps_filtered_rel)$SexOfPartner)

adonis_uf_partnersex = vegan::adonis2(D_UF ~ phyloseq::sample_data(ps_filtered_rel)$SexOfPartner)
adonis_pw_uf_partnersex = pairwise.adonis(D_UF, phyloseq::sample_data(ps_filtered_rel)$SexOfPartner)

adonis_wUF_partnersex = vegan::adonis2(D_wUF ~ phyloseq::sample_data(ps_filtered_rel)$SexOfPartner)
adonis_pw_wUF_partnersex = pairwise.adonis(D_wUF, phyloseq::sample_data(ps_filtered_rel)$SexOfPartner)

kable(adonis_pw_bc, digits = 3, caption = "Bray-Curtis")
kable(adonis_pw_uf, digits = 3, caption ="Unweigthed Unifrac")
kable(adonis_pw_wUF, digits = 3, caption = "Weighted Unifrac")
```

Adonis identifies significant influence of sex of partner oall indices of beta diversity. Pairwise comparisons remain significant for all groups (p = 0.03)

```{r maaslin2}
genus_SexOfPartner = Maaslin2(input_data = otu_table(ps_rel_genus_sexuallyactive),
         input_metadata = as(sample_data(ps_rel_genus_sexuallyactive), "data.frame"),
         output = "results/maaslin2/genus_SexOfPartner",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = "SexOfPartner") 
genus_SexOfPartner2  = Maaslin2(input_data = otu_table(ps_rel_genus_sexuallyactive),
         input_metadata = as(sample_data(ps_rel_genus_sexuallyactive), "data.frame"),
         output = "results/maaslin2/genus_SexOfPartnergrp",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = c("SexOfPartner", "grp", "SexOfPartner*grp"))



tax_table(ps_rel_genus_sexuallyactive) %>%
  as.data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% filter(genus_SexOfPartner2$results, qval < 0.2)$feature)

maaslin_res_genus_sexpartner = ggplot(filter(psmelt_rel_genus_sexuallyactive, OTU %in% filter(genus_SexOfPartner2$results, qval < 0.2)$feature),
                                aes(x = SexOfPartner, y = Abundance,fill = SexOfPartner)) +
  geom_jitter() +
  geom_boxplot(alpha = 0.7, outlier.shape = NA) +
  facet_grid(grp~Genus, scales = "free") +
  scale_y_continuous(limits = function(x){c(0, max(0.1, x))}) +
  theme(legend.position = "none")+
  labs(x = "Sex of Partner",
       y = "Genus Abundance (%)",
       caption = "Maaslin2 results") +
      scale_y_continuous(expand = expansion(mult = c(0, 0.2))) 

  

maaslin_res_genus_sexpartner
ggsave(maaslin_res_genus_sexpartner, filename = "results/maaslin2/genus_SexOfPartner_panelplot.pdf",
       height = 5, width = 6)


# M/F distinction only in trans - filter for this group
ps_rel_genus_sexuallyactive_trans = subset_samples(ps_rel_genus_sexuallyactive, grp =="03_trans-men")
genus_SexOfPartnerTrans = Maaslin2(input_data = otu_table(ps_rel_genus_sexuallyactive_trans),
         input_metadata = as(sample_data(ps_rel_genus_sexuallyactive_trans), "data.frame"),
         output = "results/maaslin2/genus_SexOfPartnerTrans",
         min_abundance = 5,
         min_prevalence = 0.2,
         max_significance = 0.2,
         fixed_effects = "SexOfPartner") 

# no significant results in trans group only
```
